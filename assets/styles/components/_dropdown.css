.dash-dropdown {
  display: inline-block; /* This is key - inline behavior with flex children */
  vertical-align: middle;
}

/* Value and Placeholder */
.Select-value {
    margin: 2px 0 !important;  /* Small margin for visual spacing */
    background-color: #dcdcdc !important;
    border: none !important;
    padding: 0 !important;
    align-items: center !important;
}

.Select-value {
    display: inline-flex !important;
}

.Select-value-label {
    color: #000000;
    background-color: #dcdcdc;
    font-size: 0.75rem;
    padding: 0 !important;
    margin: 0;
    border: 0;
    text-overflow: ellipsis;    /* Adds an ellipsis (...) when content overflows */
    overflow: hidden;           /* Hides overflow content */
    display: inline-block;      /* Keeps the element inline */
}

/* Center content inside the control */
.Select--single .Select-control {
  display: flex;
  justify-content: center;
}

/* Center the value wrapper */
.Select--single .Select-multi-value-wrapper {
  text-align: center;
  flex: 1;
}

/* Center the selected value */
.Select--single .Select-value {
  display: flex;
  justify-content: center;
  max-height: 100% !important;
}

/* Make sure text is centered */
.Select--single .Select-value-label {
  text-align: center;
  line-height: 1 !important;
  min-width: 100% !important;
  margin-right: 0.5rem !important;
}

/* Base styles for X icons */
.Select-value-icon {
  display: inline-flex;
  align-items: center !important;
  justify-content: center !important;
  width: 11px;
  height: 100%;
  padding: 0 !important;
  cursor: pointer;
  margin: 0 !important;
  position: relative;
  font-size: 0;  /* Hide original text content */
  /* Reset and set new background */
  background: rgba(0, 0, 0, 0.08) !important;
  /* Explicit border settings */
  border: none;  /* Reset any existing borders first */
  border-right: 1px solid rgba(0, 0, 0, 0.12) !important;
}

/* Centered X for both icons */
.Select-value-icon:after {
  content: "×";
  position: absolute;
  top: 50%;
  left: 50%;
  background: rgba(0, 0, 0, 0.08) !important;
  transform: translate(-50%, -50%);
  font-size: 1rem;  /* Ensure parent has a base font size */
  line-height: 1;
  display: block;
  color: rgba(0, 0, 0, 0.45);
  white-space: nowrap;
}

/* Hide any default content */
.Select-value-icon > * {
  display: none;
}

.Select-multi-value-wrapper {
  flex: 1;                /* Allow the value area to take up remaining space */
  display: flex;          /* Use flex here as well */
  align-items: center;    /* Center vertically */
  white-space: nowrap;    /* Prevent text wrapping */
}

/* Style the disabled state through the parent container */
.Select.is-disabled .Select-control {
    background-color: #E8E8E8 !important;
    cursor: not-allowed;
    opacity: 0.3;
}

.Select-control {
    display: flex !important;      /* Enable flex layout */
    align-items: center;            /* Center children vertically */
    white-space: nowrap !important;
    background-color: #E8E8E8 !important;
    color: #000000;
    height: auto !important;
    border: 1px solid #CCCCCC !important;
    min-height: 0 !important;
    padding: 0 !important;
}


.Select-arrow-zone {
  flex-shrink: 0;         /* Prevent the arrow from shrinking */
  display: flex;
  align-items: center;
  padding: 0 3px;         /* Adjust spacing as needed */
}
/* Completely remove the default Select arrow */
.Select-arrow {
    display: none !important;
    border: none !important;
    width: 0 !important;
    border-color: #999 transparent transparent;
    height: 0 !important;
    border-style: solid; 
    border-width: 5px 5px 2.5px;
    
}

.Select-arrow {
    display: none !important;
    /*display: inline-block;*/
}

/* Single arrow for Select */
.Select-arrow-zone::after {
  content: "▼";
  font-size: 0.8em;   
}

.Select-arrow-zone:hover {
  color: #333;
}

/* Style the arrow when disabled */
.Select.is-disabled .Select-arrow-zone {
    opacity: 0.3;
    cursor: not-allowed;
}

/* Target the input when disabled */
.Select.is-disabled .Select-input[aria-disabled="true"] {
    cursor: not-allowed;
    background-color: transparent; /* Since it's just a 1px wide input */
}

.Select-input{
    display: none !important;
}

/* Add styles for placeholder state */
.Select-placeholder {
    position: relative !important; /* Override any absolute positioning */
    padding: 2px !important;      /* Match the value padding */
    margin: 0 !important;     /* Match the value margin */
    display: flex !important;
    align-items: center !important;
    line-height: 1.2 !important;
    height: auto !important;
    font-size: 0.8rem;       
    background-color: transparent !important;   /* Make background transparent */
    color: #1F2937 !important;
}

.Select-placeholder::after {
    content: " *";
    color: #DC2626; /* Red color for the asterisk */
}

/* Style the placeholder specifically when dropdown is disabled */
.Select.is-disabled .Select-placeholder {
    color: #999999;
    cursor: not-allowed;
}

.dropdown-placeholder {
    font-size: 0.8rem;       
    margin-left: 1px !important;      /* Match the value padding */
    line-height: 1.2 !important;
    color: #1F2937 !important;
    display: flex; /* For better alignment */
    align-items: center;
}

.dropdown-placeholder::after {
    content: " *";
    color: #DC2626;
    margin-left: 2px;
}

/* Virtualized Select */
.VirtualizedSelectOption,
.VirtualizedSelectSelectedOption,
.VirtualizedSelectFocusedOption {
    height: 20px !important;
    width: auto;
    line-height: 20px !important;
    padding: 0.5rem 0 !important;
    margin: 0 0 0 1rem !important;
}

.ReactVirtualized__Grid__innerScrollContainer {
    max-height: none !important;
}